# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

# -- common labels to apply to all resources.
commonLabels: {}

# Empty variables will fail during rollout
openTelemetry:

  # -- OpenTelemetry Collector image configuration
  collectorImage:
    # -- Image repository for OpenTelemetry Collector
    repository: ghcr.io/cloudoperators/opentelemetry-collector-contrib
    # -- Image tag for OpenTelemetry Collector
    tag: "2016982"
  # -- custom Labels applied to servicemonitor, secrets and collectors
  customLabels: {}

  openSearchLogs:
    # -- Endpoint URL for OpenSearch
    endpoint:
    # -- Username for OpenSearch endpoint
    failover_username_a:
    # -- Password for OpenSearch endpoint
    failover_password_a:
    # -- Second Username (as a failover) for OpenSearch endpoint
    failover_username_b:
    # -- Second Password (as a failover) for OpenSearch endpoint
    failover_password_b:
    # -- Name for OpenSearch index
    index:
  # -- Cluster label for Logging
  cluster:
  # -- Region label for Logging
  region:
  logsCollector:
    # -- Activates the standard configuration for Logs.
    enabled: true
    # -- Activates the failover mechanism for shipping logs using the failover_username_band failover_password_b credentials in case the credentials failover_username_a and failover_password_a have expired.
    failover:
      enabled: true
    # -- Activates the configuration for KVM logs (requires logsCollector to be enabled).
    kvmConfig:
      enabled: false
    # -- Activates the configuration for Ceph logs (requires logsCollector to be enabled).
    cephConfig:
      enabled: false
  # -- Activates the standard configuration for metrics.
  metricsCollector:
    enabled: false
  prometheus:
    # -- Activates the service-monitoring for the Logs Collector.
    serviceMonitor:
      enabled: true
    # -- Activates the pod-monitoring for the Logs Collector.
    podMonitor:
      enabled: true
    # -- Label selectors for the Prometheus resources to be picked up by prometheus-operator.
    additionalLabels: {}
    # plugin: kube-monitoring
    # prometheus: infra

    # -- Default rules for monitoring the opentelemetry components.
    rules:
      # -- Enables PrometheusRule resources to be created.
      create: true

      # -- PrometheusRules to enable.
      enabled:
        - FilelogRefusedLogs
        - LogsOTelLogsMissing
        - LogsOTelLogsDecreasing
        - ReceiverRefusedMetric

      # -- Labels for PrometheusRules.
      labels: {}

      # -- Annotations for PrometheusRules.
      annotations: {}

      ## This is useful for adding additional labels such as "support_group" or "service" for the routing of alerts to each rule
      # -- Additional labels for PrometheusRule alerts.
      additionalRuleLabels:
        # support_group: support
        # service: my-service

testFramework:
  # -- Activates the Helm chart testing framework.
  enabled: true
  image:
    # -- Defines the image registry for the test framework.
    registry: ghcr.io
    # -- Defines the image repository for the test framework.
    repository: cloudoperators/greenhouse-extensions-integration-test
    # -- Defines the image tag for the test framework.
    tag: main
  # -- Defines the image pull policy for the test framework.
  imagePullPolicy: IfNotPresent
