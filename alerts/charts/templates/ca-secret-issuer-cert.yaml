{{- if and .Values.alerts.alertmanager.enabled .Values.alerts.alertmanager.ingress.enabled }}
{{- $cert := fromYaml (include "alerts.generateCert" .) }}
{{- $caCertEnc := $cert.ca }}
{{- $certCrtEnc := $cert.crt }}
{{- $certKeyEnc := $cert.key }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
  labels:
{{- include "kube-prometheus-stack.labels" . | nindent 4 }}
  name: {{ $.Release.Namespace }}-monitoring-ca
  namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ $certCrtEnc }}
  tls.key: {{ $certKeyEnc }}
  ca.crt: {{ $caCertEnc }}
{{- if .Capabilities.APIVersions.Has "cert-manager.io/v1" }}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
  name: {{ $.Release.Namespace }}-monitoring-issuer
  namespace: {{ $.Release.Namespace }}
spec:
  ca:
    secretName: {{ $.Release.Namespace }}-monitoring-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  labels:
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
  name: {{ $.Release.Namespace }}-prometheus-auth
  namespace: {{ $.Release.Namespace }}
spec:
  dnsNames:
    - {{ .Values.global.greenhouse.baseDomain | default "greenhouse.io" }}
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: {{ $.Release.Namespace }}-monitoring-issuer
  secretName: tls-{{ $.Release.Namespace }}-prometheus-auth
{{- end }}
{{- end }}
