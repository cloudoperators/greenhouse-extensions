{{- if and .Values.alerts.alertmanager.enabled .Values.alerts.alertmanager.ingress.enabled }}
{{- $caSecret := (lookup "v1" "Secret" $.Release.Namespace (printf "%s-%s" $.Release.Namespace "monitoring-ca")) }}
{{- if not $caSecret }}
{{- $ca := genCA (printf "%s-%s" $.Release.Name "custom-ca") 3650 }}
apiVersion: v1
kind: Secret
type: Opaque

metadata:
  name: {{ $.Release.Namespace }}-monitoring-ca
  labels:
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
data:
  tls.crt: {{ $ca.Cert | b64enc | quote }}
  tls.key: {{ $ca.Key | b64enc | quote }}
---
{{- end }}
{{- if .Capabilities.APIVersions.Has "cert-manager.io/v1" }}
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ $.Release.Namespace }}-monitoring-issuer
  labels:
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
spec:
  ca:
    secretName: {{ $.Release.Namespace }}-monitoring-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ $.Release.Namespace }}-prometheus-auth
  labels:
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
spec:
  dnsNames:
    - "*.cloud.sap"
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: {{ $.Release.Namespace }}-monitoring-issuer
  secretName: tls-{{ $.Release.Namespace }}-prometheus-auth
{{- end }}
{{- end }}
