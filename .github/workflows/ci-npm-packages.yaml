# Run it locally with act
#  1. Install act:
#     `brew install act`
#  2. Create a .secret file with the following content:
#     `GITHUB_TOKEN=your_github_token`
#  PULL REQUEST
#  1. Create a act_pull_request.json file in case of a pull request with the following content:
#     `{"pull_request": {"number": <PR number>, "head": {"ref": "<PR branch name>", "sha": "PR commit sha"}, "base": {"ref": "main"}}, "repository": {"name": "juno", "owner": {"login": "cloudoperators"}}}`
#  2. Run the following command:
#     `act pull_request --container-architecture linux/amd64 -P default=catthehacker/ubuntu:act-latest  -j run-pipeline -e act_pull_request.json -W .github/workflows/ci-npm-packages.yaml`

name: Detect NPM Package Changes and trigger Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "*/ui/**" # This pattern matches any `ui` folder at the second level

jobs:
  list-ui-folders:
    runs-on: [default]
    outputs:
      ui-folders: ${{ steps.list-folders.outputs.ui-folders }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List UI Folders
        id: list-folders
        run: |
          # Find all ui folders at the second level
          ui_folders=$(find . -mindepth 2 -maxdepth 2 -type d -name "ui" | sed 's|^\./||' | tr '\n' ' ')

          echo "::set-output name=ui-folders::$ui_folders"

  # run-detect-changes:
  #   uses: ./../juno/.github/workflows/check-changes-npm-package.yaml
  #   with:
  #     paths: "*/ui"

  # run-pipeline:
  #   needs: [run-detect-changes]
  #   strategy:
  #     matrix:
  #       change: ${{fromJson(needs.run-detect-changes.outputs.changes)}}
  #       node: [20.x]
  #     fail-fast: false # Allow other jobs to continue if one fails
  #   uses: ./../juno/.github/workflows/pipeline-npm-package.yaml
  #   with:
  #     path: ${{ matrix.change }}
  #     node: "${{ matrix.node }}"
