name: "Helm lint and tests"
on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  helm-lint-test:
    runs-on: [default]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.17.0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.x"
          check-latest: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up chart-linting and chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: chart-list-changed
        run: |
          changed_charts=$(ct list-changed --config .github/configs/helm-lint-test.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed_charts" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "$changed_charts" > changed_charts.txt
          fi

      - name: Create kind cluster
        if: steps.chart-list-changed.outputs.changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0

      - name: Install dependencies for changed plugins if needed
        if: steps.chart-list-changed.outputs.changed == 'true'
        run: |
          for chart in $(cat changed_charts.txt); do
          plugin_dir=$(dirname "$chart")
          if [[ -f "${plugin_dir}/test-dependencies.yaml" ]]; then
              echo "üîç Found dependent plugin(s) for plugin $plugin_dir. Installing..."
              for dep in $(yq eval '.dependencies[]' "${plugin_dir}/test-dependencies.yaml"); do
                echo "üì¶ Installing dependent plugin: $dep ‚è≥"
                if [[ ! -d "$dep/charts" ]]; then
                  echo "‚ùå Dependency '$dep' not found (expected ./$dep/charts)" >&2
                  exit 1
                fi
                if [[ -n $(yq eval '.values' "${plugin_dir}/test-dependencies.yaml") ]]; then
                  helm upgrade --install "$dep" "./$dep/charts" --values <(yq eval '.values' ${plugin_dir}/test-dependencies.yaml) --wait || {
                  echo "üí• Helm install failed for dependency '$dep'" >&2
                  exit 1
                }
                else
                  helm upgrade --install "$dep" "./$dep/charts" --wait || {
                  echo "üí• Helm install failed for dependency '$dep'" >&2
                  exit 1
                }
                fi
              done
          else
              echo "‚ÑπÔ∏è No test-dependencies.yaml found for plugin '$plugin_dir'. Skipping..."
          fi
          done

      - name: Run chart integration tests
        if: steps.chart-list-changed.outputs.changed == 'true'
        run: ct lint-and-install --config .github/configs/helm-lint-test.yaml
      
      - name: Print pod logs on failure
        if: failure() && steps.chart-list-changed.outputs.changed == 'true'
        run: |
          echo "üîç Printing logs for failed pods..."
          kubectl get pods -n default
          kubectl get deployments -n default
          kubectl get services -n default
          echo
          for pod in $(kubectl get pods -n default --field-selector=status.phase!=Succeeded,status.phase!=Running -o jsonpath='{.items[*].metadata.name}'); do
            echo "Logs for pod $pod:"
            kubectl logs -n default $pod --all-containers=true || true
          done