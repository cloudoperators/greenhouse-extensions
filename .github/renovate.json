{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "assigneesFromCodeOwners": true,
  "extends": [
    "config:recommended",
    "helpers:pinGitHubActionDigests"
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Bump ingress-nginx version in the plugindefinition",
      "managerFilePatterns": [
        "/^ingress-nginx.plugindefinition.yaml$/"
      ],
      "matchStrings": [
        "helmChart:\\s*name:\\s*.*\\s*repository:\\s*.*\\s*version\\s*\\:\\s*(?<currentValue>v?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes/ingress-nginx",
      "extractVersionTemplate": "^helm-chart-(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump external-dns version in the plugindefinition",
      "managerFilePatterns": [
        "/^external-dns.plugindefinition.yaml$/"
      ],
      "matchStrings": [
        "helmChart:\\s*name:\\s*.*\\s*repository:\\s*.*\\s*version\\s*\\:\\s*(?<currentValue>v?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes-sigs/external-dns",
      "extractVersionTemplate": "^external-dns-helm-chart-(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump cert-manager version in the plugindefinition",
      "managerFilePatterns": [
        "/^cert-manager.plugindefinition.yaml$/"
      ],
      "matchStrings": [
        "helmChart:\\s*name:\\s*.*\\s*repository:\\s*.*\\s*version\\s*\\:\\s*(?<currentValue>v?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "cert-manager/cert-manager",
      "extractVersionTemplate": "^(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump kube-monitoring version in the plugindefinition",
      "managerFilePatterns": [
        "/^kube-monitoring.plugindefinition.yaml$/"
      ],
      "matchStrings": [
        "# renovate depName=(?<packageName>.*)\\s*name:\\s*.*\\s*repository:\\s*.*\\s*version\\s*\\:\\s*(?<currentValue>v?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "helm"
    },
    {
      "customType": "regex",
      "description": "Bump alerts version in the plugindefinition",
      "managerFilePatterns": [
        "/^alerts.plugindefinition.yaml$/"
      ],
      "matchStrings": [
        "# renovate depName=(?<packageName>.*)\\s*name:\\s*.*\\s*repository:\\s*.*\\s*version\\s*\\:\\s*(?<currentValue>v?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "helm"
    },
    {
      "customType": "regex",
      "description": "Bump kustomize version in the Makefile",
      "managerFilePatterns": [
        "/^Makefile$/"
      ],
      "matchStrings": [
        "KUSTOMIZE_VERSION\\s*\\?=\\s*(?<currentValue>.?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes-sigs/kustomize",
      "extractVersionTemplate": "^kustomize/v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump yq version in the Makefile",
      "managerFilePatterns": [
        "/^Makefile$/"
      ],
      "matchStrings": [
        "YQ_VERSION\\s*\\?=\\s*(?<currentValue>.?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "mikefarah/yq",
      "extractVersionTemplate": "^((?<version>.?(?:\\d+\\.){0,2}\\d+))"
    },
    {
      "customType": "regex",
      "description": "Bump helm-docs version in the Makefile",
      "managerFilePatterns": [
        "/^Makefile$/"
      ],
      "matchStrings": [
        "HELM_DOCS_VERSION\\s*\\?=\\s*(?<currentValue>.?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "norwoodj/helm-docs",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump pint version in the Makefile",
      "managerFilePatterns": [
        "/^Makefile$/"
      ],
      "matchStrings": [
        "PINT_VERSION\\s*\\?=\\s*(?<currentValue>.?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "cloudflare/pint",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump helm version in the Makefile",
      "managerFilePatterns": [
        "/^Makefile$/"
      ],
      "matchStrings": [
        "HELM_VERSION\\s*\\?=\\s*(?<currentValue>.?(?:\\d+\\.){0,2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "helm/helm",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump kubectl version in integration-test Dockerfile",
      "managerFilePatterns": [
        "Dockerfile.integration-test"
      ],
      "matchStrings": [
        "ARG KUBECTL_VERSION=v(?<currentValue>v?[0-9]+\\.[0-9]+\\.[0-9]+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes/kubernetes",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump grpc-health-probe version in integration-test Dockerfile",
      "managerFilePatterns": [
        "Dockerfile.integration-test"
      ],
      "matchStrings": [
        "ARG GRPC_HEALTH_PROBE_VERSION=v(?<currentValue>v?[0-9]+\\.[0-9]+\\.[0-9]+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "grpc-ecosystem/grpc-health-probe",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump yq version in integration-test Dockerfile",
      "managerFilePatterns": [
        "Dockerfile.integration-test"
      ],
      "matchStrings": [
        "ARG YQ_VERSION=v(?<currentValue>v?[0-9]+\\.[0-9]+\\.[0-9]+)"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "mikefarah/yq",
      "extractVersionTemplate": "^v(?<version>.*)$"
    }
  ],
  "packageRules": [
    {
      "matchCategories": [
        "docker"
      ],
      "enabled": true,
      "pinDigests": true
    },
    {
      "groupName": "github actions",
      "matchManagers": [
        "github-actions"
      ],
      "matchUpdateTypes": [
        "major",
        "minor"
      ],
      "extends": [
        "helpers:pinGitHubActionDigests"
      ],
      "minimumReleaseAge": "14 days"
    },
    {
      "matchManagers": [
        "helmv3"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "minimumReleaseAge": "7 days",
      "additionalBranchPrefix": "{{parentDir}}-",
      "bumpVersion": "patch",
      "groupName": "{{{packageFile}}} helm chart updates",
      "postUpdateOptions": [
        "helmUpdateSubChartArchives"
      ],
      "ignorePaths": [
        "**/cert-manager/charts/**"
      ]
    },
    {
      "matchManagers": [
        "helmv3"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "minimumReleaseAge": "14 days",
      "additionalBranchPrefix": "{{parentDir}}-",
      "bumpVersion": "minor",
      "groupName": "{{{packageFile}}} helm chart updates",
      "postUpdateOptions": [
        "helmUpdateSubChartArchives"
      ],
      "ignorePaths": [
        "**/cert-manager/charts/**"
      ]
    },
    {
      "matchManagers": [
        "helmv3"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "minimumReleaseAge": "14 days",
      "additionalBranchPrefix": "{{parentDir}}-",
      "bumpVersion": "major",
      "groupName": "{{{packageFile}}} helm chart updates",
      "postUpdateOptions": [
        "helmUpdateSubChartArchives"
      ],
      "ignorePaths": [
        "**/cert-manager/charts/**"
      ]
    },
    {
      "groupName": "npm dependencies",
      "matchDatasources": [
        "npm"
      ],
      "minimumReleaseAge": "14 days"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "debian",
        "ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"
      ],
      "groupName": "OTEL docker base images"
    },
    {
      "matchManagers": [
        "custom.regex"
      ],
      "matchFileNames": [
        "Dockerfile.integration-test"
      ],
      "groupName": "integration-test Dockerfile dependencies"
    },
    {
      "matchManagers": [
        "custom.regex"
      ],
      "matchFileNames": [
        "Makefile"
      ],
      "groupName": "Makefile dependencies"
    }
  ],
  "separateMinorPatch": true
}
