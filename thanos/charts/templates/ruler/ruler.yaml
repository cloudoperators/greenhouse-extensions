{{ if and (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1") .Values.ruler.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ThanosRuler
metadata:
  # FullName = thanos-ruler-<name>
  name: {{ include "release.name" . }}
  labels:
    {{- include "plugin.labels" . | nindent 4 }}
    {{- include "thanos.labels" . | nindent 4 }}
    {{- if .Values.ruler.labels }}
    {{ toYaml .Values.ruler.labels | nindent 4 }}
    {{- end }}
spec:
  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
  {{- if .Values.ruler.externalPrefix }}
  externalPrefix: {{ .Values.ruler.externalPrefix }}
  routePrefix: {{ .Values.ruler.externalPrefix }}
  {{- end }}
  portName: http
  podMetadata:
    labels:
      {{- include "plugin.labels" . | nindent 6 }}
      {{- include "thanos.labels" . | nindent 6 }}
  ruleSelector:
    matchLabels:
      thanos-ruler: {{ .Values.ruler.matchLabel | default .Release.Name }}
  serviceName: {{ include "release.name" . }}-ruler
  queryEndpoints:
    - {{ include "release.name" . }}-query:10902
  {{ if .Values.ruler.alertmanagers.enabled }}
  alertmanagersConfig:
    key: alertManagerConfig.yaml # Key name for alert manager config yaml
    name: thanos-ruler-{{ include "release.name" . }}-alertmanager-config # Secret name containing alert manager config
  {{ end }}
  # Select rules from all namespaces.
  ruleNamespaceSelector: {}  
  {{ if and .Values.ruler.alertmanagers.authentication.enabled .Values.ruler.alertmanagers.enabled }}
  containers:
    - name: thanos-ruler
      volumeMounts:
        - mountPath: /etc/thanos/secrets/thanos-ruler-{{ include "release.name" . }}-alertmanager-sso-cert
          name: thanos-ruler-{{ include "release.name" . }}-alertmanager-sso-cert
          readOnly: true
  volumes:
    - name: thanos-ruler-{{ include "release.name" . }}-alertmanager-sso-cert
      secret:
        secretName: thanos-ruler-{{ include "release.name" . }}-alertmanager-sso-cert
  {{ end }}
{{ end }}