# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

## common labels to apply to all resources
commonLabels: {}

# opentelemetry-operator is an upstream dependency, it is required that it is a separate block. This is customised configuration of the dependency.
opentelemetry-operator:
  nameOverride: "operator"

  # The required CRDs used by this dependency are version-controlled in this repository under ./crds.
  # This is required because there is no other Plugin that would install them, and because automatic CRD installs are not supported due to a limitation with helm, see [HIP0011](https://github.com/helm/community/blob/main/hips/hip-0011.md).
  crds:
    create: false
  admissionWebhooks:
    failurePolicy: 'Ignore'

    # If cert-manager should be used, the CRDs for cert-manager needs to exists before otel installs cert-manager.
    certManager:
      enabled: false
    autoGenerateCert:
      recreate: false
  manager:
    collectorImage:
      repository: ghcr.io/cloudoperators/opentelemetry-collector-contrib
      tag: main
    image:
      repository: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator
      tag: v0.116.0
    deploymentAnnotations:
      vpa-butler.cloud.sap/update-mode: Auto
    serviceMonitor:
      enabled: true
  kubeRBACProxy:
    enabled: false

# Empty variables will fail during rollout
openTelemetry:
  ## custom Labels applied to servicemonitor, secrets and collectors
  customLabels: {}

  openSearchLogs:
    endpoint:
    failover_username_a:
    failover_password_a:
    failover_username_b:
    failover_password_b:
    index:
  cluster:
  region:
  logsCollector:
    enabled: true
    kvmConfig:
      enabled: true
    cephConfig:
      enabled: true
  metricsCollector:
    enabled: false
  prometheus:
    serviceMonitor:
      enabled: true
    podMonitor:
      enabled: true
    ## Label selectors for the Prometheus resources to be picked up by prometheus-operator.
    additionalLabels: {}
    # plugin: kube-monitoring
    # prometheus: infra

    ## Default rules for monitoring the opentelemetry components
    rules:
      ## Enables PrometheusRule resources to be created
      create: true

      # PrometheusRules to disable
      disabled: []

      ## Labels for PrometheusRules
      labels: {}

      ## Annotations for PrometheusRules
      annotations: {}

      ## Additional labels for PrometheusRule alerts
      ## This is useful for adding additional labels such as "support_group" or "service" for the routing of alerts to each rule
      additionalRuleLabels:
        # support_group: support
        # service: my-service

testFramework:
  enabled: true
  image:
    registry: ghcr.io
    repository: cloudoperators/greenhouse-extensions-integration-test
    tag: main
  imagePullPolicy: IfNotPresent
