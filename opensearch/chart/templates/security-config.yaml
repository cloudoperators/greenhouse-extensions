# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Secret
metadata:
  name: opensearch-security-config
  labels:
    {{- include "opensearch.labels" . | nindent 4 }}
stringData:
  config.yml: |-
    _meta:
      type: "config"
      config_version: 2
    config:
      dynamic:
        kibana:
          server_username: {{- if .Values.enableSecretInjection }} {{ printf "{{ resolve %q }}" "cluster.usersCredentials.dashboards.username" }}{{- else }} {{ .Values.cluster.usersCredentials.dashboards.username }}{{- end }}
        http:
          anonymous_auth_enabled: false
          xff:
            enabled: true
            internalProxies: '.*'  # Trust all internal proxies (service-proxy)
            remoteIpHeader: 'x-forwarded-for'
        authc:
          proxy_auth_domain:
            description: "Authenticate via proxy headers from OAuth2 proxy"
            http_enabled: true
            transport_enabled: true
            order: 0
            http_authenticator:
              type: proxy
              challenge: false
              config:
                user_header: "x-forwarded-user"
                roles_header: "x-forwarded-groups"
                roles_separator: ","
            authentication_backend:
              type: noop
          basic_internal_auth_domain:
            description: "Authenticate via HTTP Basic against internal users database"
            http_enabled: true
            transport_enabled: true
            order: 1
            http_authenticator:
              type: basic
              challenge: true
            authentication_backend:
              type: intern

  internal_users.yml: |-
    _meta:
      type: "internalusers"
      config_version: 2
    admin:
      hash: {{- if .Values.enableSecretInjection }} {{ printf "{{ resolve %q }}" "cluster.usersCredentials.admin.hash" }}{{- else }} {{ .Values.cluster.usersCredentials.admin.hash | quote }}{{- end }}
      reserved: true
      backend_roles:
        - "admin"

  roles.yml: |-
    _meta:
      type: "roles"
      config_version: 2

  roles_mapping.yml: |-
    _meta:
      type: "rolesmapping"
      config_version: 2
    all_access:
      reserved: false
      backend_roles:
        - "admin"
      users:
        - "admin"

  tenants.yml: |-
    _meta:
      type: "tenants"
      config_version: 2
