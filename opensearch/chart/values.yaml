# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

certManager:
  # -- Enable cert-manager integration for issuing TLS certificates
  enable: true

  issuer:
    # -- API group for the DigicertIssuer custom resource
    digicert: {}

    # -- Name of the CA Issuer to be used for internal certs
    ca:
      name: opensearch-ca-issuer

    # -- Name of the self-signed issuer used to sign the internal CA certificate
    selfSigned:
      name: opensearch-issuer

  defaults:
    privateKey:
      # -- Algorithm used for generating private keys
      algorithm: RSA
      # -- Encoding format for private keys (PKCS8 recommended)
      encoding: PKCS8
      # -- Key size in bits for RSA keys
      size: 2048

    durations:
      # -- Validity period for CA certificates (1 year)
      ca: 8760h
      # -- Validity period for leaf certificates (200 days to comply with CA/B Forum baseline requirements)
      leaf: 4800h

    # -- List of extended key usages for certificates
    usages:
      - digital signature
      - key encipherment
      - server auth
      - client auth

  # -- Override HTTP DNS names for OpenSearch client endpoints
  httpDnsNames:
    - opensearch-client.tld

operator:
  namespace: ""
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}
  nodeSelector: {}
  tolerations: []
  securityContext:
    runAsNonRoot: true
  priorityClassName: ""
  manager:
    securityContext:
      allowPrivilegeEscalation: false
    extraEnv: []
    resources:
      limits:
        cpu: 200m
        memory: 500Mi
      requests:
        cpu: 100m
        memory: 350Mi

    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8081
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
      initialDelaySeconds: 10

    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /readyz
        port: 8081
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
      initialDelaySeconds: 10

    # Set this to false to disable the experimental parallel recovery in case you are experiencing problems
    parallelRecoveryEnabled: true
    # Set this to true to enable the standard go pprof endpoints on port 6060 (https://pkg.go.dev/net/http/pprof)
    # Should only be used for debugging purposes
    pprofEndpointsEnabled: false

    image:
      repository: opensearchproject/opensearch-operator
      ## tag default uses appVersion from Chart.yaml, to override specify tag tag: "v1.1"
      tag: ""
      pullPolicy: "Always"

    ## Optional array of imagePullSecrets containing private registry credentials
    imagePullSecrets: []
    # - name: secretName

    dnsBase: cluster.local

    # Log level of the operator. Possible values: debug, info, warn, error
    loglevel: debug

    # If a watchNamespace is specified, the manager's cache will be restricted to
    # watch objects in the desired namespace. Defaults is to watch all namespaces.
    watchNamespace:

  # Install the Custom Resource Definitions with Helm
  installCRDs: false

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Override the service account name. Defaults to opensearch-operator-controller-manager
    name: "opensearch-operator-controller-manager"

  kubeRbacProxy:
    enable: true
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 25m
        memory: 25Mi

    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10443
        scheme: HTTPS
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
      initialDelaySeconds: 10

    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10443
        scheme: HTTPS
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
      initialDelaySeconds: 10

    image:
      repository: "quay.io/brancz/kube-rbac-proxy"
      tag: "v0.19.1"

  ## If this is set to true, RoleBindings will be used instead of ClusterRoleBindings, inorder to restrict ClusterRoles
  ## to the namespace where the operator and OpenSearch cluster are in. In that case, specify the namespace where they
  ## are in in manager.watchNamespace field.
  ## If false, ClusterRoleBindings will be used
  useRoleBindings: false


cluster:
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # -- Create Service Account
    create: false

    # -- Service Account name. Set `general.serviceAccount` to use this Service Account for the Opensearch cluster
    name: ""

    # -- Service Account annotations
    annotations: {}

  # OpenSearchCluster configuration
  cluster:
    # -- OpenSearchCluster name, by default release name is used
    name: ""

    # -- OpenSearchCluster annotations
    annotations: {}

    # -- OpenSearchCluster labels
    labels: {}

    # OpenSearchCluster general configuration
    general:
      # -- Extra items to add to the opensearch.yml
      additionalConfig: {}

      # -- Additional volumes to mount to all pods in the cluster. Supported volume types configMap, emptyDir, secret (with default Kubernetes configuration schema)
      additionalVolumes: []
        # - name: "volume-name"
        #   path: "/tmp/volume"
        ## Whether to restart the pods on content change
        #   restartPods: false

      # -- Controls whether to drain data notes on rolling restart operations
      drainDataNodes: true

      # -- Opensearch service http port
      httpPort: 9200

      # -- Opensearch image
      image: docker.io/opensearchproject/opensearch

      # -- Default image pull policy
      imagePullPolicy: IfNotPresent

      # -- Default image pull secret
      # imagePullSecrets: []

      # -- Populate opensearch keystore before startup
      keystore: []
  #      - secret:
  #          name: secret-name
  #      - secret:
  #          name: many-secret-values
  #        keyMappings:
  #          # Only read "sensitive-value" from the secret, keep its name.
  #          sensitive-value: sensitive-value

      # Monitoring configuration. Check [documentation](https://github.com/Opster/opensearch-k8s-operator/blob/main/docs/userguide/main.md#adding-opensearch-monitoring-to-your-cluster) how to configure it.
      monitoring:
        # -- Enable cluster monitoring
        enable: true

        # -- Secret with 'username' and 'password' keys for monitoring user. You could also use OpenSearchUser CRD instead of setting it.
        monitoringUserSecret: ""

        # -- Custom URL for the monitoring plugin
        pluginUrl: "https://github.com/opensearch-project/opensearch-prometheus-exporter/releases/download/3.2.0.0/prometheus-exporter-3.2.0.0.zip"

        # -- How often to scrape metrics
        scrapeInterval: 30s

        # -- Override the tlsConfig of the generated ServiceMonitor
        tlsConfig:
          insecureSkipVerify: true

        # -- ServiceMonitor labels
        labels: {}

        # -- PrometheusRule labels
        additionalRuleLabels: {}

      # -- List of Opensearch plugins to install
      pluginsList: []

      # -- Opensearch pod security context configuration
      podSecurityContext: {}

      # -- Opensearch securityContext
      securityContext: {}

      # -- Opensearch serviceAccount name. If Service Account doesn't exist it could be created by setting `serviceAccount.create` and `serviceAccount.name`
      serviceAccount: ""

      # -- Opensearch service name
      serviceName: ""

      # -- Enable setVMMaxMapCount. OpenSearch requires the Linux kernel vm.max_map_count option to be set to at least 262144
      setVMMaxMapCount: true

      # -- Opensearch snapshot repositories configuration
      snapshotRepositories: []
  #      - name: "snapshot-repo"
  #        type: s3
  #        settings:
  #          bucket: opensearch-s3-snapshot
  #          region: us-east-1
  #          base_path: os-snapshot

      vendor: Opensearch

      # -- Opensearch version
      version: 3.2.0

    # OpenSearchCluster boostrap pod configuration
    bootstrap:
      # -- bootstrap additional configuration, key-value pairs that will be added to the opensearch.yml configuration
      additionalConfig: {}

      # -- bootstrap pod affinity rules
      affinity: {}

      # -- bootstrap pod jvm options. If jvm is not provided then the java heap size will be set to half of resources.requests.memory which is the recommend value for data nodes.
      # If jvm is not provided and resources.requests.memory does not exist then value will be -Xmx512M -Xms512M
      jvm: ""

      # -- bootstrap pod node selectors
      nodeSelector: {}

      # -- bootstrap pod cpu and memory resources
      resources: {}

      # -- bootstrap pod tolerations
      tolerations: []

    # OpenSearchCluster additional services
    confMgmt:
      # -- Enable nodes to be safely removed from the cluster
      smartScaler: true

    # OpenSearchCluster dashboards configuration
    dashboards:
      # -- Additional properties for opensearch_dashboards.yaml
      additionalConfig:
        opensearch.requestHeadersAllowlist: '["securitytenant","Authorization","x-forwarded-for","x-forwarded-user","x-forwarded-groups","x-forwarded-email"]'
        opensearch_security.auth.type: "proxy"
        opensearch_security.proxycache.user_header: "x-forwarded-user"
        opensearch_security.proxycache.roles_header: "x-forwarded-groups"

      # -- dashboards pod affinity rules
      affinity: {}

      # -- dashboards annotations
      annotations: {}

      # -- dashboards Base Path for Opensearch Clusters running behind a reverse proxy
      basePath: ""

      # -- Enable dashboards deployment
      enable: true

      # -- dashboards pod env variables
      env: []

      # -- dashboards image
      image: docker.io/opensearchproject/opensearch-dashboards

      # -- dashboards image pull policy
      imagePullPolicy: "IfNotPresent"

      # -- dashboards image pull secrets
      imagePullSecrets: []

      # -- dashboards labels
      labels: {}

      # -- dashboards pod node selectors
      nodeSelector: {}

      # -- Secret that contains fields username and password for dashboards to use to login to opensearch, must only be supplied
      # if a custom securityconfig is provided
      opensearchCredentialsSecret:
        name: "dashboards-credentials"

      # -- List of dashboards plugins to install
      pluginsList: []

      # -- dasboards pod security context configuration
      podSecurityContext: {}

      # -- number of dashboards replicas
      replicas: 1

      # -- dashboards pod cpu and memory resources
      resources: {}

      # -- dashboards security context configuration
      securityContext: {}

      service:
        # -- source ranges for a loadbalancer
        loadBalancerSourceRanges: []
        # -- dashboards service type
        type: ClusterIP
        # -- dashboards service metadata labels
        labels: {}

      tls:
        # -- Secret that contains the ca certificate as ca.crt. If this and generate=true is set the existing
        # CA cert from that secret is used to generate the node certs. In this case must contain ca.crt and ca.key fields
        caSecret:
          name: "opensearch-ca-cert"

        # -- Enable HTTPS for dashboards
        enable: false

        # -- generate certificate, if false secret must be provided
        generate: false

        # -- Optional, name of a TLS secret that contains ca.crt, tls.key and tls.crt data. If ca.crt is in a different
        # secret provide it via the caSecret field
        secret:
          name: "opensearch-http-cert"

      # -- dashboards pod tolerations
      tolerations: []

      # -- dashboards version
      version: 3.2.0

    # initHelper configuration
    initHelper:
      # -- initHelper image pull policy
      imagePullPolicy: "IfNotPresent"

      # -- initHelper image pull secret
      imagePullSecrets: []

      # -- initHelper pod cpu and memory resources
      resources: {}

      # -- initHelper version
      version: "1.36"

    # -- Opensearch nodes configuration
    # @default -- <pre>nodePools:<br>  - component: main<br>    diskSize: "30Gi"<br>    replicas: 3<br>    roles:<br>      - "cluster_manager"<br>    resources:<br>      requests:<br>        memory: "1Gi"<br>        cpu: "500m"<br>      limits:<br>        memory: "2Gi"<br>        cpu: 1</pre>
    nodePools:
      - component: main
        diskSize: "30Gi"
        replicas: 3
        roles:
          - "cluster_manager"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: 1
      - component: data
        diskSize: "30Gi"
        replicas: 3
        roles:
          - "data"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: 2
      - component: client
        diskSize: "30Gi"
        replicas: 1
        roles:
          - "client"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: 1

    # Configuration for the client service used to expose client nodes externally.
    client:
      service:
        # -- Enable or disable the external client service.
        enabled: false
        # -- Kubernetes service type. Defaults to `ClusterIP`, but should be set to `LoadBalancer` to expose OpenSearch client nodes externally.
        type: ClusterIP
        # -- Annotations to add to the service, e.g. disco.
        annotations: {}
        # -- Ports to expose for the client service.
        ports:
          - name: http
            port: 9200
            targetPort: 9200
            protocol: TCP
        # -- List of allowed IP ranges for external access when service type is `LoadBalancer`.
        loadBalancerSourceRanges: []
        # -- List of external IPs to expose the service on.
        externalIPs: []

    # Opensearch security configuration
    security:
      config:
        # -- Secret that contains fields username and password to be used by the operator to access the opensearch cluster
        # for node draining. Must be set if custom securityconfig is provided.
        adminCredentialsSecret:
          name: "admin-credentials"

        # -- TLS Secret that contains a client certificate (tls.key, tls.crt, ca.crt) with admin rights in the opensearch cluster.
        # Must be set if transport certificates are provided by user and not generated
        adminSecret:
          name: "opensearch-admin-cert"

        # -- Secret that contains the differnt yml files of the opensearch-security config (config.yml, internal_users.yml, etc)
        securityConfigSecret:
          name: "opensearch-security-config"

      # Configure tls usage for transport and http interface
      tls:
        http:
          # -- Optional, secret that contains the ca certificate as ca.crt. If this and generate=true is set the existing
          # CA cert from that secret is used to generate the node certs. In this case must contain ca.crt and ca.key fields
          caSecret:
            name: "opensearch-http-cert"

          # -- If set to true the operator will generate a CA and certificates for the cluster to use,
          # if false - secrets with existing certificates must be supplied
          generate: false

          # -- Optional, name of a TLS secret that contains ca.crt, tls.key and tls.crt data. If ca.crt is in a
          # different secret provide it via the caSecret field
          secret:
            name: "opensearch-http-cert"

        transport:
          # -- DNs of certificates that should have admin access, mainly used for securityconfig updates via securityadmin.sh,
          # only used when existing certificates are provided
          adminDn:
            - "CN=admin"

          # -- Optional, secret that contains the ca certificate as ca.crt. If this and generate=true is set the existing
          # CA cert from that secret is used to generate the node certs. In this case must contain ca.crt and ca.key fields
          caSecret:
            name: "opensearch-ca-cert"

          # -- If set to true the operator will generate a CA and certificates for the cluster to use,
          # if false secrets with existing certificates must be supplied
          generate: false

          # --  Allowed Certificate DNs for nodes, only used when existing certificates are provided
          nodesDn:
            - "CN=opensearch-transport"

          # -- Separate certificate per node
          perNode: false

          # -- Optional, name of a TLS secret that contains ca.crt, tls.key and tls.crt data. If ca.crt is in a
          # different secret provide it via the caSecret field
          secret:
            name: "opensearch-transport-cert"

    # Opensearch Ingress configuration
    ingress:
      opensearch:
        # -- Enable ingress for Opensearch service
        enabled: false

        # -- Opensearch ingress annotations
        annotations: {}

        # -- Opensearch Ingress class name
        className: ""

        # -- Opensearch Ingress hostnames
        hosts: []
  #        - host: example.com
  #          paths:
  #            - path: /
  #              pathType: ImplementationSpecific

        # -- Opensearch tls configuration
        tls: []
          # - hosts:
          #   - example.com
          #  secretName: tls-secret

      # Dashboards Ingress configuration
      dashboards:
        # -- Enable ingress for dashboards service
        enabled: false

        # -- dashboards ingress annotations
        annotations: {}

        # -- Ingress class name
        className: ""

        # -- Ingress hostnames
        hosts: []
  #        - host: example.com
  #          paths:
  #            - path: /
  #              pathType: ImplementationSpecific

        # -- Ingress tls configuration
        tls: []
        #  - hosts:
        #      - example.com
        #    secretName: tls-secret

  # -- List of OpensearchRole. See values.yaml file for a full example.
  # @default -- <pre>roles:<br>  - name: "logs-write-role"<br>    clusterPermissions:<br>      - "cluster_monitor"<br>    indexPermissions:<br>      - indexPatterns:<br>          - "logs*"<br>        allowedActions:<br>          - "indices:admin/template/get"</pre>
  roles:
    - name: "logs-write-role"
      clusterPermissions:
        - "cluster_monitor"
        - "cluster_composite_ops"
        - "cluster:admin/ingest/pipeline/put"
        - "cluster:admin/ingest/pipeline/get"
        - "indices:admin/template/get"
        - "cluster_manage_index_templates"
      indexPermissions:
        - indexPatterns:
            - "logs*"
          allowedActions:
            - "indices:admin/template/get"
            - "indices:admin/template/put"
            - "indices:admin/mapping/put"
            - "indices:admin/create"
            - "indices:data/write/bulk*"
            - "indices:data/write/index"
            - "indices:data/read*"
            - "indices:monitor*"
            - "indices_all"
    - name: "logs-read-role"
      clusterPermissions:
        - "read"
        - "cluster:monitor/nodes/stats"
        - "cluster:admin/opensearch/ql/datasources/read"
        - "cluster:monitor/task/get"
        - 'cluster:admin/opendistro/reports/definition/create'
        - 'cluster:admin/opendistro/reports/definition/update'
        - 'cluster:admin/opendistro/reports/definition/on_demand'
        - 'cluster:admin/opendistro/reports/definition/delete'
        - 'cluster:admin/opendistro/reports/definition/get'
        - 'cluster:admin/opendistro/reports/definition/list'
        - 'cluster:admin/opendistro/reports/instance/list'
        - 'cluster:admin/opendistro/reports/instance/get'
        - 'cluster:admin/opendistro/reports/menu/download'
        - 'cluster:admin/opensearch/ppl'
      indexPermissions:
        - indexPatterns:
            - "*"
          allowedActions:
            - "search"
            - "read"
            - "get"
            - "indices:monitor/settings/get"
            - "indices:admin/create"
            - "indices:admin/mappings/get"
            - "indices:data/read/search*"
            - "indices:admin/get"
    - name: "dashboards-role"
      clusterPermissions:
        - "cluster_monitor"
        - "cluster_composite_ops"
        - "indices:admin/template*"
        - "indices:data/read/scroll*"
      indexPermissions:
        - indexPatterns:
            - ".kibana*"
            - ".opensearch_dashboards*"
            - ".tasks"
            - ".management-beats*"
          allowedActions:
            - "indices_all"
        - indexPatterns:
            - "*"
          allowedActions:
            - "indices:admin/aliases*"
            - "indices:admin/get"

  # -- List of OpenSearch user configurations.
  # @default -- <pre>users:<br>  - name: "logs"<br>    secretName: "logs-credentials"<br>    secretKey: "password"<br>    backendRoles: []</pre>
  users:
    - name: "logs"
      secretName: "logs-credentials"
      secretKey: "password"
      backendRoles: []
    - name: "logs2"
      secretName: "logs2-credentials"
      secretKey: "password"
      backendRoles: []
    - name: "dashboards"
      secretName: "dashboards-credentials"
      secretKey: "password"
      backendRoles: []
    - name: "dashboards2"
      secretName: "dashboards2-credentials"
      secretKey: "password"
      backendRoles: []

  # -- List of OpenSearch user credentials. These credentials are used for authenticating users with OpenSearch. See values.yaml file for a full example.
  # @default -- <pre>usersCredentials:<br>  admin:<br>    username: "admin"<br>    password: "admin"<br>    hash: ""</pre>
  usersCredentials:
    admin:
      username: ""  # Specify the username for the "admin" user. If left empty, defaults to "admin".
      password: ""  # Replace password with a secure value before deploying to production. A dummy password is set in ci/test-values.yaml for testing purposes.
      hash: ""      # Optional bcrypt hash of the password.
    logs:
      username: ""  # Specify the username for the "logs" user. If left empty, defaults to "logs".
      password: ""  # Replace password with a secure value before deploying to production. A dummy password is set in ci/test-values.yaml for testing purposes.
    logs2:
      username: ""  # Specify the username for the failover user for "logs". If left empty, defaults to "logs2".
      password: ""  # Replace password with a secure value before deploying to production. A dummy password is set in ci/test-values.yaml for testing purposes.
    dashboards:
      username: ""  # Specify the username for the "dashboards" user. If left empty, defaults to "dashboards".
      password: ""  # Replace password with a secure value before deploying to production. A dummy password is set in ci/test-values.yaml for testing purposes.
    dashboards2:
      username: ""  # Specify the username for the failover user for "dashboards". If left empty, defaults to "dashboards2".
      password: ""  # Replace password with a secure value before deploying to production. A dummy password is set in ci/test-values.yaml for testing purposes.

  # -- Allows to link any number of users, backend roles and roles with a OpensearchUserRoleBinding. Each user in the binding will be granted each role
  # @default -- <pre>usersRoleBinding:<br>  - name: "logs-write"<br>    users:<br>      - "logs"<br>      - "logs2"<br>    roles:<br>      - "logs-write-role"</pre>
  usersRoleBinding:
    - name: "logs-write"
      users:
        - "logs"
        - "logs2"
      roles:
        - "logs-write-role"
    - name: "dashboards"
      users:
        - "dashboards"
        - "dashboards2"
      roles:
        - "dashboards-role"

  # -- List of additional tenants. Check values.yaml file for examples.
  tenants: []
  #  - name: "example-tenant"
  #    description: "example-tenant"

  # -- List of OpensearchActionGroup. Check values.yaml file for examples.
  actionGroups: []
  #  - name: "example-action-group"
  #    description: "Example of action group"
  #    allowedActions:
  #      - indices:admin/aliases/get
  #      - indices:admin/aliases/exists
  #    type: index

  # -- List of OpensearchComponentTemplate. Check values.yaml file for examples.
  # @default -- <pre>componentTemplates:<br>  - name: logs-attributes-dynamic<br>    version: 1<br>    allowAutoCreate: true<br>    _meta:<br>      description: "Enable full dynamic mapping for all attributes.* keys"<br>    templateSpec:<br>      mappings:<br>        properties:<br>          attributes:<br>            type: object<br>            dynamic: true</pre>
  componentTemplates:
    - name: logs-attributes-dynamic
      version: 1
      allowAutoCreate: true
      _meta:
        description: "Enable full dynamic mapping for all attributes.* keys"
      templateSpec:
        mappings:
          properties:
            attributes:
              type: object
              dynamic: true

  # -- List of OpensearchIndexTemplate.
  # @default -- <pre>indexTemplates:<br>  - name: "logs-index-template"<br>    indexPatterns:<br>      - "logs*"<br>    composedOf:<br>      - logs-attributes-dynamic<br>    templateSpec:<br>      settings:<br>        index:<br>          number_of_shards: 1<br>          number_of_replicas: 1<br>          refresh_interval: 1s<br>      mappings:<br>        properties:<br>          "@timestamp":<br>            type: date<br>          message:<br>            type: text<br>    dataStream:<br>      timestamp_field:<br>        name: "@timestamp"<br>    priority: 100</pre>
  indexTemplates:
    - name: logs-index-template
      indexPatterns:
        - "logs*"
      composedOf:
        - logs-attributes-dynamic
      templateSpec:
        settings:
          index:
            number_of_shards: 1
            number_of_replicas: 1
            refresh_interval: 1s
        mappings:
          properties:
            "@timestamp":
              type: date
            message:
              type: text
      dataStream: {}
      priority: 100

  # -- List of OpenSearchISMPolicy. Check values.yaml file for examples.
  # @default -- <pre>ismPolicies:<br>  - name: logs-rollover-policy<br>    defaultState: hot<br>    description: "Advanced logs lifecycle policy with hot/warm/cold phases and optimized rollover conditions"<br>    states:<br>      - name: hot<br>        actions:<br>          - rollover:<br>              minIndexAge: "1d"<br>              minSize: "10gb"<br>              minDocCount: 10000000<br>        transitions:<br>          - stateName: warm<br>            conditions:<br>              minIndexAge: "3d"<br>      - name: warm<br>        actions:<br>          - read_only: {}<br>          - force_merge:<br>              maxNumSegments: 1<br>        transitions:<br>          - stateName: cold<br>            conditions:<br>              minIndexAge: "7d"<br>      - name: cold<br>        actions:<br>          - allocation:<br>              require:<br>                box_type: "cold"<br>              exclude: {}<br>              include: {}<br>        transitions:<br>          - stateName: delete<br>            conditions:<br>              minIndexAge: "30d"<br>      - name: delete<br>        actions:<br>          - delete: {}<br>        transitions: []<br>    ismTemplate:<br>      indexPatterns:<br>        - "logs*"<br>      priority: 100</pre>
  ismPolicies:
    - name: logs-rollover-policy
      defaultState: hot
      description: "Logs policy with 7-day retention and size-based rollover"
      states:
        - name: hot
          actions:
            - rollover:
                minSize: "10gb"
                minDocCount: 20000000
          transitions:
            - stateName: delete
              conditions:
                minIndexAge: "7d"
        - name: delete
          actions:
            - delete: {}
      ismTemplate:
        indexPatterns:
          - "logs*"
        priority: 100

testFramework:
  # -- Activates the Helm chart testing framework.
  enabled: true
  image:
    # -- Defines the image registry for the test framework.
    registry: ghcr.io
    # -- Defines the image repository for the test framework.
    repository: cloudoperators/greenhouse-extensions-integration-test
    # -- Defines the image tag for the test framework.
    tag: main
  # -- Defines the image pull policy for the test framework.
  imagePullPolicy: IfNotPresent
